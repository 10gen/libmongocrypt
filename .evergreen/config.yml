# Welcome. Evergreen configuration can be time consuming to modify and test.
# So each script has a header comment describing how to run it locally.
#
# Some environment variables are hidden by ${inject_env_from_evergreen}.
# This is set in the evergreen project.
# View this in Evergreen => Projects => libmongocrypt.
#
functions:
  "fetch source":
    - command: git.get_project
      params: {directory: libmongocrypt}
    - command: shell.exec
      params:
        script: |-
          set -o errexit
          chmod u+x libmongocrypt/.evergreen/*.sh
          ./libmongocrypt/.evergreen/print-env-info.sh

  "tar and upload libmongocrypt libraries":
    - command: archive.targz_pack
      params:
        target: libmongocrypt.tar.gz
        source_dir: install/libmongocrypt
        include: [./**]
    - command: s3.put
      params:
        aws_key: '${aws_key}'
        aws_secret: '${aws_secret}'
        remote_file: '${libmongocrypt_s3_path}'
        bucket: mciuploads
        permissions: public-read
        local_file: 'libmongocrypt.tar.gz'
        content_type: '${content_type|application/x-gzip}'

  "build and test":
    - command: "shell.exec"
      params:
        script: |-
          eval "${inject_env_from_evergreen}"
          ${compile_env|} ./libmongocrypt/.evergreen/compile.sh
          ${test_env|} ./libmongocrypt/.evergreen/test.sh

  "build and test java":
    - command: "shell.exec"
      params:
        script: |-
          eval "${inject_env_from_evergreen}"
          ${compile_env|} ./libmongocrypt/.evergreen/compile.sh
          cd ./libmongocrypt/bindings/java/mongocrypt && ${test_env|} ./.evergreen/test.sh

tasks:
- name: build-and-test-and-upload
  commands:
  - func: "fetch source"
  - func: "build and test"
  - func: "tar and upload libmongocrypt libraries"

- name: build-and-test-shared-bson
  commands:
  - func: "fetch source"
  - func: "build and test"
    vars:
      compile_env: LIBMONGOCRYPT_EXTRA_CMAKE_FLAGS="-DENABLE_SHARED_BSON=ON"

- name: build-and-test-asan
  commands:
  - func: "fetch source"
  - func: "build and test"
    vars:
      compile_env: LIBMONGOCRYPT_EXTRA_CFLAGS="-fsanitize=address -pthread"
      test_env: ASAN_OPTIONS="detect_leaks=1" LSAN_OPTIONS="suppressions=.lsan-suppressions"

- name: build-and-test-asan-mac
  commands:
  - func: "fetch source"
  - func: "build and test"
    vars:
      compile_env: LIBMONGOCRYPT_EXTRA_CFLAGS="-fsanitize=address"
      test_env: LSAN_OPTIONS="suppressions=.lsan-suppressions"

- name: build-and-test-asan-s390x
  commands:
  - func: "fetch source"
  - func: "build and test"
    vars:
      compile_env: LIBMONGOCRYPT_EXTRA_CFLAGS="-fsanitize=address"
      test_env: LSAN_OPTIONS="suppressions=.lsan-suppressions"

- name: build-and-test-valgrind
  commands:
  - func: "fetch source"
  - func: "build and test"
    vars:
      test_env: VALGRIND="valgrind --leak-check=full --error-exitcode=1"

- name: build-and-test-java
  commands:
    - func: "fetch source"
    - func: "build and test java"

pre:
  # Update the evergreen expansion to dynamically set the ${libmongocrypt_s3_path} expansion.
  # If this is a patch build, we want a URL specific to the patch, like:
  # /mciuploads/libmongocrypt/ubuntu1604/24411/build-and-test/libmongocrypt_ubuntu1604_24411/libmongocrypt.tar.gz
  # If this is a waterfall build, we want a fixed "latest" URL, like:
  # /mciuploads/libmongocrypt/ubuntu1604/latest/libmongocrypt.tar.gz
  - command: "shell.exec"
    params:
      script: |-
        tag_name=$(git describe --exact-match ${revision} 2>/dev/null)
        # non-patch build with no tag associated with the commit
        REMOTE_PATH="${project}/${build_variant}/${branch_name}/${revision}/libmongocrypt.tar.gz"
        if [ "${is_patch}" = "true" ]; then
           REMOTE_PATH="${project}/${build_variant}/${branch_name}/${revision}/${task_name}/${build_id}/libmongocrypt.tar.gz"
        elif [ -n "${tag_name}" ]; then
           # non-patch build that has a tag associated with the commit
           REMOTE_PATH="${project}/${build_variant}/${branch_name}/${tag_name}/libmongocrypt.tar.gz"
        fi
        unset tag_name
        echo "libmongocrypt_s3_path: $REMOTE_PATH"
        echo "libmongocrypt_s3_path: $REMOTE_PATH" > expansion.yml
  - command: expansions.update
    params:
      file: expansion.yml

buildvariants:
- name: ubuntu1604
  display_name: "Ubuntu 16.04 64-bit"
  run_on: ubuntu1604-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-valgrind
  - build-and-test-java
- name: rhel76
  display_name: "RHEL 7.6"
  run_on: rhel76-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: macos
  display_name: "macOS 10.14"
  run_on: macos-1014
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan-mac
  - build-and-test-java
- name: rhel72-zseries-test
  display_name: "RHEL 7.2 on zSeries"
  run_on: rhel72-zseries-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: windows-test
  display_name: "Windows 2016"
  run_on: windows-64-vs2017-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
- name: linux-64-amazon-ami
  display_name: "Amazon Linux"
  run_on: amazon1-2018-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: amazon2
  display_name: "Amazon Linux 2"
  run_on: amazon2-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: debian92
  display_name: "Debian 9.2"
  run_on: debian92-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: rhel-62-64-bit
  display_name: "RHEL 6.2 64-bit"
  run_on: rhel62-small
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: rhel-67-s390x
  display_name: "RHEL 6.7 s390x"
  run_on: rhel67-zseries-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: rhel-70-64-bit
  display_name: "RHEL 7.0 64-bit"
  run_on: rhel70-small
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: rhel-71-ppc64el
  display_name: "RHEL 7.1 ppc64el"
  run_on: rhel71-power8-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: suse12-64
  display_name: "SLES 12 64-bit"
  run_on: suse12-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: suse15-64
  display_name: "SLES 15 64-bit"
  run_on: suse15-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
  display_name: "SLES 12 s390x"
  run_on: suse12-zseries-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: ubuntu1604-arm64
  display_name: "Ubuntu 16.04 arm64"
  run_on: ubuntu1604-arm64-large
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: ubuntu1604-s390x
  display_name: "Ubuntu 16.04 s390x"
  run_on: ubuntu1604-zseries-small
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-java
- name: ubuntu1804-64
  display_name: "Ubuntu 18.04 64-bit"
  run_on: ubuntu1804-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: ubuntu1804-arm64
  display_name: "Ubuntu 18.04 arm64"
  run_on: ubuntu1804-arm64-build
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: ubuntu1804-ppc64el
  display_name: "Ubuntu 18.04 ppc64el"
  run_on: ubuntu1804-power8-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan
  - build-and-test-java
- name: ubuntu1804-s390x
  display_name: "Ubuntu 18.04 s390x"
  run_on: ubuntu1804-zseries-test
  tasks:
  - build-and-test-and-upload
  - build-and-test-shared-bson
  - build-and-test-asan-s390x
  - build-and-test-java
